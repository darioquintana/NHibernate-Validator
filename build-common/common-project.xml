<?xml version="1.0" ?>
<project xmlns="http://nant.sf.net/release/0.85-rc3/nant.xsd">

	<description>
		<![CDATA[
		This file contains common tasks tailored specifically for the NHibernate

		build process. The goal was to define all the actions in this file, so
		that actual project build files only have to configure a few variables
		and call tasks in this file.

		Usage

		<property name="root.dir" value="../.." />;
		<include buildfile="${root.dir}/build-common/common-project.xml" />;

		These lines should be placed at the top level under the <project>
		element. Property root.dir defines a relative path to the root of the
		distribution, that is, NHibernate directory.

		After including the file, a target should be defined to initialize
		configuration variables according to the project being built.
		The standard name of this target is init (but any other name can be chosen).
		The init target should depend on (or call) target common.init defined
		in this file.

		Other predefined targets are:

			- common.run-tests
				run compiled NUnit tests.

		All compile/run targets put the output in bin.dir.
		]]>
	</description>

	<include buildfile="common.xml" />

	<target name="common.run-tests"
		description="Run NUnit tests">
		<call target="common.find-nunit" unless="${property::exists('nunit.found')}" />
		<exec program="${nunit-console}">
			<arg line="bin/${build.config}/${net.target-fx}/${project::get-name()}.dll --result=${testresults.dir}/${project::get-name()}.dll-${net.target-fx}-results.xml;format=nunit2" />
		</exec>
		<exec program="dotnet">
			<arg line="bin/${build.config}/${net.core-fx}/${project::get-name()}.dll --labels=before --nocolor --result=${testresults.dir}/${project::get-name()}.dll-${net.core-fx}-results.xml" />
		</exec>
	</target>

</project>
